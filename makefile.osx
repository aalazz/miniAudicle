
ifeq ($(shell sw_vers -productVersion | egrep '10\.6(\.[0-9]+)?'),)
LINK_EXTRAS=
else
LINK_EXTRAS=-F/System/Library/PrivateFrameworks \
    -weak_framework MultitouchSupport
endif

CHUCK_SRC_DIR=chuck
LANGUAGE=English

OSX_DIR=macosx
BIN_DIR=macosx
INSTALL_DIR=/Applications

# compilation/linking presets
CC=gcc
CXX=g++
INCLUDES=-I$(CHUCK_SRC_DIR) -I$(OSX_DIR) -I.
FLAGS=-D__MACOSX_CORE__ -c -DGCC_FAST_OBJC_DISPATCH_i386 -m32
LIBS=-framework Cocoa -framework CoreAudio -framework CoreMIDI \
	-framework CoreFoundation -framework Carbon -framework IOKit \
    $(LINK_EXTRAS) -lstdc++ -lm
LDFLAGS=$(LIBS) -m32
SF_SRC=util_sndfile.c

ifneq ($(CHUCK_DEBUG),)
FLAGS+= -g
else
FLAGS+= -O3
endif

ifneq ($(CHUCK_STRICT),)
FLAGS+= -Wall
endif

# distribution target presets
VERSION?=0.2.0

DIST_DIR=miniAudicle-$(VERSION)

NOTES_DIR=../notes
NOTES=COPYING LGPL INSTALL BUGS VERSIONS
NOTES:=$(addprefix $(NOTES_DIR)/,$(NOTES))

DOC_DIR=../docs/web
DOCS=index.html maui_api.html miniAudicle.css
DOCS:=$(addprefix $(DOC_DIR)/,$(DOCS))

DOC_IMAGE_DIR=../docs/web/images
DOC_IMAGES=$(wildcard $(DOC_IMAGE_DIR)/*)

EXAMPLES_DIR=../test
EXAMPLES=slide01.ck slide02.ck slide03.ck led01.ck view01.ck mand-o-ui.ck \
         mode-o-ui.ck gauge01.ck gauge02.ck
EXAMPLES:=$(addprefix $(EXAMPLES_DIR)/,$(EXAMPLES))

CHUCK_MANUAL_DIR=$(CHUCK_SRC_DIR)/../doc/manual
CHUCK_MANUAL=$(CHUCK_MANUAL_DIR)/ChucK_manual.pdf

#-----------------------------------------------------------------------------
# by default, ChucK uses a pre-configured libsndfile...
# uncomment the next 3 lines to use libsndfile on your system
#-----------------------------------------------------------------------------
#FLAGS+= -D__CK_SNDFILE_NATIVE__
#LIBS+= -lsndfile
#SF_SRC=

CHUCK_SRCS= $(CHUCK_SRC_DIR)/chuck_absyn.cpp $(CHUCK_SRC_DIR)/chuck_parse.cpp \
	$(CHUCK_SRC_DIR)/chuck_errmsg.cpp $(CHUCK_SRC_DIR)/chuck_frame.cpp \
	$(CHUCK_SRC_DIR)/chuck_symbol.cpp $(CHUCK_SRC_DIR)/chuck_table.cpp \
	$(CHUCK_SRC_DIR)/chuck_utils.cpp $(CHUCK_SRC_DIR)/chuck_vm.cpp \
	$(CHUCK_SRC_DIR)/chuck_instr.cpp $(CHUCK_SRC_DIR)/chuck_scan.cpp \
	$(CHUCK_SRC_DIR)/chuck_type.cpp $(CHUCK_SRC_DIR)/chuck_emit.cpp \
	$(CHUCK_SRC_DIR)/chuck_compile.cpp $(CHUCK_SRC_DIR)/chuck_dl.cpp \
	$(CHUCK_SRC_DIR)/chuck_oo.cpp $(CHUCK_SRC_DIR)/chuck_lang.cpp \
	$(CHUCK_SRC_DIR)/chuck_ugen.cpp $(CHUCK_SRC_DIR)/chuck_globals.cpp \
	$(CHUCK_SRC_DIR)/chuck_otf.cpp $(CHUCK_SRC_DIR)/chuck_stats.cpp \
	$(CHUCK_SRC_DIR)/chuck_bbq.cpp $(CHUCK_SRC_DIR)/chuck_shell.cpp \
	$(CHUCK_SRC_DIR)/chuck_console.cpp $(CHUCK_SRC_DIR)/digiio_rtaudio.cpp \
	$(CHUCK_SRC_DIR)/hidio_sdl.cpp \
	$(CHUCK_SRC_DIR)/midiio_rtmidi.cpp $(CHUCK_SRC_DIR)/rtaudio.cpp \
	$(CHUCK_SRC_DIR)/rtmidi.cpp $(CHUCK_SRC_DIR)/ugen_osc.cpp \
	$(CHUCK_SRC_DIR)/ugen_filter.cpp $(CHUCK_SRC_DIR)/ugen_stk.cpp \
	$(CHUCK_SRC_DIR)/ugen_xxx.cpp \
	$(CHUCK_SRC_DIR)/uana_xform.cpp $(CHUCK_SRC_DIR)/uana_extract.cpp \
	$(CHUCK_SRC_DIR)/ulib_machine.cpp \
	$(CHUCK_SRC_DIR)/ulib_math.cpp $(CHUCK_SRC_DIR)/ulib_std.cpp \
	$(CHUCK_SRC_DIR)/ulib_opsc.cpp $(CHUCK_SRC_DIR)/util_buffers.cpp \
	$(CHUCK_SRC_DIR)/util_console.cpp $(CHUCK_SRC_DIR)/util_math.c \
	$(CHUCK_SRC_DIR)/util_network.c $(CHUCK_SRC_DIR)/util_raw.c \
	$(CHUCK_SRC_DIR)/util_string.cpp $(CHUCK_SRC_DIR)/util_thread.cpp \
	$(CHUCK_SRC_DIR)/util_xforms.c $(CHUCK_SRC_DIR)/util_opsc.cpp \
	$(CHUCK_SRC_DIR)/util_hid.cpp  $(CHUCK_SRC_DIR)/$(SF_SRC)

CHUCK_OBJS:=$(addsuffix .o, $(basename $(CHUCK_SRCS) ) )
CHUCK_OBJS+=$(CHUCK_SRC_DIR)/chuck.tab.o $(CHUCK_SRC_DIR)/chuck.yy.o

CHUCK_SRCS+=$(CHUCK_SRC_DIR)/chuck.lex $(CHUCK_SRC_DIR)/chuck.y

OBJS=$(OSX_DIR)/miniAudicleController.o miniAudicle.o $(OSX_DIR)/main.o \
	$(OSX_DIR)/miniAudicleVMMonitor.o \
	$(OSX_DIR)/miniAudicleDocument.o $(OSX_DIR)/miniAudicleConsoleMonitor.o \
	$(OSX_DIR)/miniAudicleShellController.o miniAudicle_shell.o \
	$(OSX_DIR)/mAConsoleMonitorView.o $(OSX_DIR)/NumberedTextView.o \
	$(OSX_DIR)/miniAudicleShellTextView.o $(OSX_DIR)/miniAudicle_ui_elements.o \
	miniAudicle_import.o miniAudicle_ui_elements.o \
	$(OSX_DIR)/miniAudiclePreferencesController.o \
	$(OSX_DIR)/mABrowserController.o \
    $(OSX_DIR)/mASyntaxHighlighter.o $(OSX_DIR)/KBPopUpToolbarItem.o \
	$(OSX_DIR)/RBSplitView.o $(OSX_DIR)/RBSplitSubview.o

# place all images in macosx/icon here
IMAGES=led-red.png led-green.png led-blue.png led-off.png \
       add.png remove.png replace.png removeall.png removelast.png error.png \
       miniAudicle.icns ck.icns Thumb9.png lock.png

IMAGES:=$(addprefix $(BIN_DIR)/miniAudicle.app/Contents/Resources/,$(IMAGES))

BUNDLE_DATA=Info.plist PkgInfo

BUNDLE_DATA:=$(addprefix $(BIN_DIR)/miniAudicle.app/Contents/,$(BUNDLE_DATA))

NIBS_BASE=miniAudicle miniAudicleDocument
XIBS=$(addprefix $(OSX_DIR)/$(LANGUAGE).lproj/,$(addsuffix .xib,$(NIBS_BASE)))
NIBS=$(addprefix $(BIN_DIR)/miniAudicle.app/Contents/Resources/$(LANGUAGE).lproj/,$(addsuffix .nib,$(NIBS_BASE)) InfoPlist.strings)

.PHONY: miniAudicle
miniAudicle: $(BIN_DIR)/miniAudicle.app/Contents/MacOS/miniAudicle $(IMAGES) $(NIBS) $(BUNDLE_DATA)

$(BIN_DIR)/miniAudicle.app/Contents/MacOS/miniAudicle: $(OBJS) chuck
	mkdir -p $(BIN_DIR)/miniAudicle.app/Contents/MacOS/
	$(CXX) -o $(BIN_DIR)/miniAudicle.app/Contents/MacOS/miniAudicle $(OBJS) $(CHUCK_OBJS) $(LDFLAGS)

$(IMAGES): $(BIN_DIR)/miniAudicle.app/Contents/Resources/%: $(OSX_DIR)/icon/% 
	mkdir -p $(BIN_DIR)/miniAudicle.app/Contents/Resources/
	cp $< $@
	touch $(BIN_DIR)/miniAudicle.app

$(BUNDLE_DATA): $(BIN_DIR)/miniAudicle.app/Contents/%: $(OSX_DIR)/%
	mkdir -p $(BIN_DIR)/miniAudicle.app/Contents/
	cp $< $@
	touch $(BIN_DIR)/miniAudicle.app

$(filter %.strings,$(NIBS)): $(BIN_DIR)/miniAudicle.app/Contents/Resources/$(LANGUAGE).lproj/%: $(OSX_DIR)/$(LANGUAGE).lproj/%
	mkdir -p $(BIN_DIR)/miniAudicle.app/Contents/Resources/$(LANGUAGE).lproj/
	cp $< $@

$(filter %.nib,$(NIBS)): $(BIN_DIR)/miniAudicle.app/Contents/Resources/$(LANGUAGE).lproj/%.nib: $(OSX_DIR)/$(LANGUAGE).lproj/%.xib
	mkdir -p $(BIN_DIR)/miniAudicle.app/Contents/Resources/$(LANGUAGE).lproj/
	/Developer/usr/bin/ibtool \
    --errors --warnings --notices --output-format human-readable-text \
    --compile $@ $<
#    --sdk /Developer/SDKs/MacOSX10.6.sdk

# build the core chuck code
.PHONY: chuck
chuck:
#	echo $(CHUCK_SRCS) &> /dev/null
	make -C $(CHUCK_SRC_DIR) -f makefile.osx

# now build miniAudicle files
$(OSX_DIR)/miniAudicleController.o: $(OSX_DIR)/miniAudicleController.mm $(OSX_DIR)/miniAudicleController.h
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/miniAudicleController.mm -o $(OSX_DIR)/miniAudicleController.o

$(OSX_DIR)/miniAudicleView.o: $(OSX_DIR)/miniAudicleView.mm $(OSX_DIR)/miniAudicleView.h
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/miniAudicleView.mm -o $(OSX_DIR)/miniAudicleView.o

$(OSX_DIR)/miniAudicleVMMonitor.o: $(OSX_DIR)/miniAudicleVMMonitor.mm $(OSX_DIR)/miniAudicleVMMonitor.h
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/miniAudicleVMMonitor.mm -o $(OSX_DIR)/miniAudicleVMMonitor.o

$(OSX_DIR)/miniAudicleDocument.o: $(OSX_DIR)/miniAudicleDocument.mm $(OSX_DIR)/miniAudicleDocument.h
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/miniAudicleDocument.mm -o $(OSX_DIR)/miniAudicleDocument.o

$(OSX_DIR)/miniAudicleConsoleMonitor.o: $(OSX_DIR)/miniAudicleConsoleMonitor.mm $(OSX_DIR)/miniAudicleConsoleMonitor.h
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/miniAudicleConsoleMonitor.mm -o $(OSX_DIR)/miniAudicleConsoleMonitor.o
	
$(OSX_DIR)/miniAudicleShellController.o: $(OSX_DIR)/miniAudicleShellController.mm $(OSX_DIR)/miniAudicleShellController.h miniAudicle_shell.h
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/miniAudicleShellController.mm -o $(OSX_DIR)/miniAudicleShellController.o

$(OSX_DIR)/miniAudicleShellTextView.o: $(OSX_DIR)/miniAudicleShellTextView.h $(OSX_DIR)/miniAudicleShellTextView.mm
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/miniAudicleShellTextView.mm -o $(OSX_DIR)/miniAudicleShellTextView.o

$(OSX_DIR)/miniAudiclePreferencesController.o: $(OSX_DIR)/miniAudiclePreferencesController.h $(OSX_DIR)/miniAudiclePreferencesController.mm
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/miniAudiclePreferencesController.mm -o $(OSX_DIR)/miniAudiclePreferencesController.o

$(OSX_DIR)/mASyntaxHighlighter.o: $(OSX_DIR)/mASyntaxHighlighter.h $(OSX_DIR)/mASyntaxHighlighter.mm
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/mASyntaxHighlighter.mm -o $(OSX_DIR)/mASyntaxHighlighter.o

$(OSX_DIR)/miniAudicle_ui_elements.o: $(OSX_DIR)/miniAudicle_ui_elements.mm miniAudicle_ui_elements.h
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/miniAudicle_ui_elements.mm -o $(OSX_DIR)/miniAudicle_ui_elements.o

miniAudicle_ui_elements.o: miniAudicle_ui_elements.cpp miniAudicle_ui_elements.h
	$(CC) $(FLAGS) $(INCLUDES) miniAudicle_ui_elements.cpp -o miniAudicle_ui_elements.o

miniAudicle_shell.o: miniAudicle_shell.cpp miniAudicle_shell.h
	$(CC) $(FLAGS) $(INCLUDES) miniAudicle_shell.cpp

miniAudicle_import.o: miniAudicle_import.h miniAudicle_import.cpp
	$(CC) $(FLAGS) $(INCLUDES) miniAudicle_import.cpp

$(OSX_DIR)/NumberedTextView.o: $(OSX_DIR)/NumberedTextView.mm $(OSX_DIR)/NumberedTextView.h
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/NumberedTextView.mm -o $(OSX_DIR)/NumberedTextView.o

$(OSX_DIR)/mAConsoleMonitorView.o: $(OSX_DIR)/mAConsoleMonitorView.mm $(OSX_DIR)/mAConsoleMonitorView.h
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/mAConsoleMonitorView.mm -o $(OSX_DIR)/mAConsoleMonitorView.o

$(OSX_DIR)/mABrowserController.o: $(OSX_DIR)/mABrowserController.mm $(OSX_DIR)/mABrowserController.h
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/mABrowserController.mm -o $(OSX_DIR)/mABrowserController.o

$(OSX_DIR)/KBPopUpToolbarItem.o: $(OSX_DIR)/KBPopUpToolbarItem.m $(OSX_DIR)/KBPopUpToolbarItem.h
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/KBPopUpToolbarItem.m -o $(OSX_DIR)/KBPopUpToolbarItem.o

$(OSX_DIR)/RBSplitView.o: $(OSX_DIR)/RBSplitView.m $(OSX_DIR)/RBSplitView.h $(OSX_DIR)/RBSplitViewPrivateDefines.h $(OSX_DIR)/RBSplitSubview.h
	$(CC) $(FLAGS) $(OSX_DIR)/RBSplitView.m -o $(OSX_DIR)/RBSplitView.o

$(OSX_DIR)/RBSplitSubview.o: $(OSX_DIR)/RBSplitSubview.m $(OSX_DIR)/RBSplitView.h $(OSX_DIR)/RBSplitViewPrivateDefines.h $(OSX_DIR)/RBSplitSubview.h
	$(CC) $(FLAGS) $(OSX_DIR)/RBSplitSubview.m -o $(OSX_DIR)/RBSplitSubview.o

miniAudicle.o: miniAudicle.cpp miniAudicle.h
	$(CC) $(FLAGS) $(INCLUDES) miniAudicle.cpp

$(OSX_DIR)/main.o: $(OSX_DIR)/main.m
	$(CC) $(FLAGS) $(INCLUDES) $(OSX_DIR)/main.m -o $(OSX_DIR)/main.o

.PHONY: clean
clean: 
	rm -rf *.o $(OSX_DIR)/*.o $(BIN_DIR)/miniAudicle.app $(DIST_DIR).dmg

.PHONY: clean-all
clean-all: 
	rm -rf *.o $(OSX_DIR)/*.o $(BIN_DIR)/miniAudicle.app $(DIST_DIR).dmg
	make -C $(CHUCK_SRC_DIR) clean

.PHONY: install
install: miniAudicle
	cp -rf $(BIN_DIR)/miniAudicle.app $(INSTALL_DIR)/

.PHONY: dist
dist: miniAudicle
	rm -rf $(DIST_DIR) miniAudicle-$(VERSION).dmg
	mkdir $(DIST_DIR)
	mkdir $(DIST_DIR)/documentation
	mkdir $(DIST_DIR)/documentation/images
	mkdir $(DIST_DIR)/documentation/examples
	mkdir $(DIST_DIR)/documentation/examples/ui
	ln -s documentation/examples $(DIST_DIR)/
	cp -r $(BIN_DIR)/miniAudicle.app $(NOTES) $(DIST_DIR)/
#	strip -u -r $(DIST_DIR)/miniAudicle.app/Contents/MacOS/miniAudicle
	cp -r $(DOCS) $(DIST_DIR)/documentation/
	cp -r $(DOC_IMAGES) $(DIST_DIR)/documentation/images/
	cp -r $(EXAMPLES) $(DIST_DIR)/documentation/examples/ui
	cp -r $(CHUCK_SRC_DIR)/examples/* $(DIST_DIR)/documentation/examples/
	make -C $(CHUCK_MANUAL_DIR) > /dev/null
	cp -r $(CHUCK_MANUAL) $(DIST_DIR)/documentation/
	rm -r `find $(DIST_DIR)/ -name .DS_Store` `find $(DIST_DIR)/ -name CVS`
	hdiutil create -srcfolder $(DIST_DIR) miniAudicle-$(VERSION).dmg -format UDZO -imagekey zlib-level=9
	rm -r $(DIST_DIR)/
